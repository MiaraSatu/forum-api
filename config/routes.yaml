api_users_create:
  path: /api/users
  methods: POST
  controller: App\Controller\UsersController::create

api_users_pick_all:
  path: /api/users
  methods: GET
  controller: App\Controller\UsersController::pickAll

api_users_pick:
  path: /api/users/{userID}
  methods: GET
  requirements: 
    userID: '[0-9]+'
  controller: App\Controller\UsersController::pick

api_users_update:
  path: /api/users/{userID}
  methods: PATCH|PUT
  requirements:
    userID: '[0-9]+'
  controller: App\Controller\UsersController::update

api_users_delete:
  path: /api/users/{userID}
  methods: DELETE
  requirements:
    userID: '[0-9]+'
  controller: App\Controller\UsersController::delete


api_posts_create:
  path: /api/users/{userID}/posts
  methods: POST
  requirements: 
    userID: '[0-9]+'
  controller: App\Controller\PostsController::create

api_posts_pick_all:
  path: /api/posts
  methods: GET
  controller: App\Controller\PostsController::pickAll

api_posts_pick:
  path: /api/posts/{postID}
  methods: GET
  requirements:
    postID: '[0-9]+'
  controller: App\Controller\PostsController::pick

api_posts_update:
  path: /api/posts/{postID}
  methods: PATCH|PUT
  requirements:
    postID: '[0-9]+'
  controller: App\Controller\PostsController:update

api_posts_delete:
  path: /api/posts/{postID}
  methods: DELETE
  requirements: 
    postID: '[0-9]+'
  controller: App\Controller\PostsController::delete


api_comments_create:
  path: /api/posts/{postID}/users/{userID}/comments
  methods: POST
  requirements:
    postID: '[0-9]+'
    userID: '[0-9]+'
  controller: App\Controller\CommentsController::create

api_comments_pick_all:
  path: /api/comments
  methods: GET
  controller: App\Controller\CommentsController::pickAll

api_comments_pick:
  path: /api/comments/{commentID}
  methods: GET
  controller: App\Controller\CommentsController::pick

api_comments_update:
  path: /api/comments/{commentID}
  methods: PATCH|PUT
  requirements:
    commentID: '[0-9]+'
  controller: App\Controller\CommentsController::update

api_comments_delete:
  path: /api/comments/{commentID}
  methods: DELETE
  requirements:
    commentID: '[0-9]+'
  controller: App\Controller\CommentsController::delete

api_comments_reply:
  path: /api/comments/{commentID}/reply/users/{userID}
  methods: POST
  requirements:
    commentID: '[0-9]+'
    userID: '[0-9]+'
  controller: App\Controller\CommentsController::reply


api_post_reactions_create:
  path: /api/posts/{postID}/users/{userID}/reactions/{isLike}
  methods: GET
  defaults:
    isLike: '1'
  requirements:
    postID: '[0-9]+'
    userID: '[0-9]+'
    isLike: '(1|0)' #1 for like, 0 for dislike
  controller: App\Controller\ReactionsController::reactPost

api_reactions_pick_all:
  path: /api/reactions
  methods: GET
  controller: App\Controller\ReactionsController::pickAll

api_reactions_delete:
  path: /api/reactions/{reactionID}
  methods: DELETE
  requirements:
    reactionID: '[0-9]+'
  controller: App\Controller\ReactionsController::delete

api_reactions_update:
  path: /api/reactions/{reactionID}/{isLike}
  methods: GET
  requirements:
    reactionID: '[0-9]+'
    isLike: '(1|0)'
  controller: App\Controller\ReactionsController::update

api_comment_reactions_create:
  path: /api/comments/{commentID}/users/{userID}/reactions/{isLike}
  methods: GET
  defaults:
    isLike: '1'
  requirements:
    commentID: '[0-9]+'
    isLike: '(1|0)'
  controller: App\Controller\ReactionsController::reactComment

# recup√©rer les reactions d'un post
api_reactions_pick:
  path: /api/{targetType}/{targetID}/reactions
  methods: GET
  requirements:
    targetType: '(post|comment)'
    targetID: '[0-9]+'
  controller: App\Controller\ReactionsController::pick

# compter les likes et les dislikes d'un target
api_reactions_count:
  path: /api/{targetType}/{targetID}/reactions/count
  methods: GET
  requirements:
    targetType: '(post|comment)'
    targetID: '[0-9]+'
  controller: App\Controller\ReactionsController::count